<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAISEAAAEAIAA0EgAAFgAAACgAAAAhAAAAQgAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABNIPwMTSD8N80g/D/NIPw/zSD8P80g/DfNIPwnzSD8FEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAFZk/IxPofx7zSD8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80g/DfNIPwgTSD
        8BEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAFZk/LfV5Ly/zuG8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD
        8P80g/D/NIPw/zSD8P80g/CfNIPwIQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAFZk/L/WZPy/1eS8v87hvD/NIPw/zSD
        8P80g/D/NIPw/zSE8P80kO3/NIfv/zSD8P80g/D/NIPw/zSD8J80g/AhAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAFZk/L/WZPy/1mT
        8v9XkvL/O4bw/zSD8P80g/D/NITw/zSS7f80luz/NIvu/zSD8P80g/D/NIPw/zSD8P80g/D/NIPwgTSD
        8BEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAFZk/L/WZPy/1mT8v9Zk/L/V5Ly/zuG8P80hPD/NJLt/zSW7P80j+7/NIPw/zSD8P80g/D/NIPw/zSD
        8P80g/D/NIPw/zSD8O80g/BhAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAFZk/LfWZPy/1mT8v9Zk/L/WZPy/1aT8v84lO3/NJbs/zSP7v80g/D/NIPw/zSD
        8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80g/D/NIPwvzSD8CEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAFZk/KfWZPy/1mT8v9Zk/L/WZPy/1KZ8P9Jnu7/OZHu/zSD
        8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8O80kO1hAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAFZk/JRWZPy/1mT8v9Zk/L/WZPy/1iU
        8v9VlvH/V5Ly/zuG8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80g/D/NIPw/zSP
        7v80luz/NJTsnwAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABWZPy31mT
        8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1eS8v87hvD/NIPw/zSD8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD
        8P80g/D/NI/u/zSW7P80lez/NIfv/zSD8M80g/ARAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABWZPygVmT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT8v9XkvL/O4bw/zSD8P80g/D/NIPw/zSD
        8P80g/D/NIPw/zSD8P80i+7/NJbs/zSV7P80h+//NIPw/zSD8P80g/DPNIPwEQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABWZPyIVmT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT8v9Zk/L/V5Ly/zuG
        8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80hfD/NI7u/zSH7/80g/D/NIPw/zSD8P80g/D/NIPwzzSD
        8BEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAVmT8p9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT
        8v9Zk/L/WZPy/1eS8v87hvD/NIPw/zSD8P80hfD/NITw/zSD8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD
        8P80g/D/NIPw/zSD8M80g/ARAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAVmT8iFZk/L/WZPy/1mT
        8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT8v9XkvL/O4bw/zSK7/80luz/NJDt/zSD8P80g/D/NIPw/zSD
        8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80g/CPAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAFZk/KfWZPy/1mT8v9YlPL/T5vv/1SX8f9Zk/L/WZPy/1mT8v9Zk/L/UZfw/ziY7P80luz/NIrv/zSD
        8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80g/D/NIPwIQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAFZk/IhWZPy/1iU8v9Nne//Sp/u/1Ga8P9Zk/L/WZPy/1mT8v9TmPH/Sp/u/0me
        7v86je//NIPw/zSD8P80g/D/NIPw/zSD8P80g/D/NIPw/zSE8P80h+//NIPw/zSD8P80g/D/NIPwnwAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABV5Tyj02d7/9Kn+7/UJvw/1mT8v9Zk/L/WZPy/1WW
        8f9Kn+7/Sp/u/1OY8f9XkvL/O4bw/zSD8P80g/D/NIPw/zSD8P80g/D/NITw/zSS7f80luz/NIfv/zSD
        8P80g/D/NIPw3wAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABSp/uEUqf7u9Qm/D/WZPy/1mT
        8v9Zk/L/WZPy/1SX8f9Kn+7/U5jx/1mT8v9Zk/L/V5Ly/zuG8P80g/D/NIPw/zSD8P80hPD/NJLt/zSW
        7P80ku3/NIPw/zSD8P80g/D/NIPw/wAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAVCa
        8HFZk/L/WZPy/1mT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1eS8v87hvD/NIPw/zSD
        8P80je7/NJbs/zSS7f80hPD/NIPw/zSD8P80g/D/NIPw3wAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAFZk/K/WZPy/1mT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT
        8v9XkvL/O4bw/zSD8P80h+//NI3u/zSE8P80g/D/NIPw/zSD8P80g/D/M5XMvzK5hREAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAFZk/IhWZPy71mT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT
        8v9Zk/L/WZPy/1mT8v9Zk/L/V5Ly/zuG8P80g/D/NIPw/zSD8P80g/D/NIPw/zSD8P80jdz/MraM/zK5
        hf8yuYWfMrmFMQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABWZPyYVmT8v9Zk/L/WZPy/1SX
        8f9SmPD/WZPy/1mT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1eS8v87hvD/NIPw/zSD8P80g/D/NIPw/zSN
        3P8ytoz/MrmF/zK5hf8yuYX/MrmFvwAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAVmT
        8p9Zk/L/U5jx/0qf7v9Kn+7/VpXx/1mT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT8v9XkvL/O4bw/zSD
        8P80g/D/NI3c/zK2jP8yuYX/MrmF/zK5hf8yuYWBAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAVmT8hFTmPDPSp/u/0qf7v9Qm/D/WZPy/1mT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT
        8v9Zk/L/V5Ly/zuG8P80jdz/MraM/zK5hf8yuYX/MrmF/zK5hY8AAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAFKn+4RSp/uz1Cb8P9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT
        8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1yb4f8/uI//MrmF/zK5hf8yuYX/MrmF/zK5hd8AAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABT5vvMVmT8u9Zk/L/WZPy/1mT
        8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT8v9Zk/L/X5zh/3XCn/9zxJj/P7uJ/zK5hf8yuYX/MrmF/zK5
        hf8yuYVhAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAVmT
        8hFZk/LPWZPy/1mT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1mT8v9fnOH/dcKf/3fFmf93xZn/c8SY/z+7
        if8yuYXPMrmFvzK5hb8yuYWPAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAFZk/IRWZPyj1mT8v9Zk/L/WZPy/1mT8v9Zk/L/WZPy/1+c4f91wp//d8WZ/3fF
        mf93xZn/d8WZ/3fFmb8AAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAVmT8kFZk/KfWZPy71mT8v9Zk/LfY6TUv3XC
        n/93xZn/d8WZ/3fFmf93xZn/d8WZ/3fFmb8AAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABd8WZEXfFmf93xZn/d8WZ/3fFmY93xZnvd8WZ/3fFmb8AAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAXfFmZ93xZn/d8WZgQAAAAEAAAABd8WZYXfFmY8AAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAXfFmTF3xZm/AAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAF3xZkRAAAAAQAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA=
</value>
  </data>
</root>